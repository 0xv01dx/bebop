{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\novak\\\\Documents\\\\MERN-Twitter-clone-main\\\\client\\\\src\\\\components\\\\Tweet\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from 'react-router-dom';\nimport ProfilePicture from '../ProfilePicture';\nimport CommentIcon from '../../icons/Comment';\nimport ReTweetIcon from '../../icons/ReTweet';\nimport HeartIcon from '../../icons/Heart';\nimport styles from './index.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tweet({\n  tweet\n}) {\n  _s();\n\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.box,\n    children: [/*#__PURE__*/_jsxDEV(ProfilePicture, {\n      image: tweet.from.profilePicture\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.head,\n        onClick: () => history.push('/profile/' + tweet.from.username),\n        children: [console.log(tweet), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: tweet.from.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 1\n        }, this), \" @\", tweet.from.username, \" \\u2022 \", timeAgo(tweet.createdAt)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.tweet,\n        onClick: () => history.push('/tweet/' + tweet._id),\n        children: [tweet.message, tweet.image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: tweet.image,\n          alt: \"tweet_image\",\n          style: {\n            borderRadius: '10px',\n            margin: '10px 0 0 0',\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.tools,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.comment,\n          children: [/*#__PURE__*/_jsxDEV(CommentIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), tweet.comments.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.retweet,\n          children: [/*#__PURE__*/_jsxDEV(ReTweetIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), tweet.retweets.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.like,\n          children: [/*#__PURE__*/_jsxDEV(HeartIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), tweet.likes.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tweet, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Tweet;\n\nconst timeAgo = createdAt => {\n  const timeDifference = Date.now() - new Date(createdAt);\n  const msTypes = [{\n    ms: 3.154e10,\n    symbol: 'y'\n  }, // ms per year (approx)\n  {\n    ms: 2.628e9,\n    symbol: 'mo'\n  }, // ms per month\n  {\n    ms: 6.048e8,\n    symbol: 'w'\n  }, // ms per week\n  {\n    ms: 8.64e7,\n    symbol: 'd'\n  }, // ms per day\n  {\n    ms: 3.6e6,\n    symbol: 'h'\n  }, // ms per hour\n  {\n    ms: 60000,\n    symbol: 'm'\n  }, // ms per minute\n  {\n    ms: 1000,\n    symbol: 's'\n  } // ms per second\n  ];\n\n  for (let i = 0; i < msTypes.length; i++) {\n    if (timeDifference >= msTypes[i].ms) return `${Math.floor(timeDifference / msTypes[i].ms)}${msTypes[i].symbol}`;\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweet\");","map":{"version":3,"sources":["C:/Users/novak/Documents/MERN-Twitter-clone-main/client/src/components/Tweet/index.js"],"names":["useHistory","ProfilePicture","CommentIcon","ReTweetIcon","HeartIcon","styles","Tweet","tweet","history","box","from","profilePicture","head","push","username","console","log","name","timeAgo","createdAt","_id","message","image","borderRadius","margin","width","tools","comment","comments","length","retweet","retweets","like","likes","timeDifference","Date","now","msTypes","ms","symbol","i","Math","floor"],"mappings":"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","sourcesContent":["import { useHistory } from 'react-router-dom';\nimport ProfilePicture from '../ProfilePicture';\nimport CommentIcon from '../../icons/Comment';\nimport ReTweetIcon from '../../icons/ReTweet';\nimport HeartIcon from '../../icons/Heart';\nimport styles from './index.module.css';\n\nexport default function Tweet({ tweet }) {\n  const history = useHistory();\n\n  return (\n    <div className={styles.box}>\n      <ProfilePicture image={tweet.from.profilePicture} />\n\n      <div>\n        <div className={styles.head} onClick={() => history.push('/profile/' + tweet.from.username)}>\n        {console.log(tweet)}\n\n<span>{tweet.from.name}</span> @{tweet.from.username} â€¢ {timeAgo(tweet.createdAt)}\n\n        </div>\n\n        <div className={styles.tweet} onClick={() => history.push('/tweet/' + tweet._id)}>\n          {tweet.message}\n          {tweet.image && (\n            <img\n              src={tweet.image}\n              alt='tweet_image'\n              style={{ borderRadius: '10px', margin: '10px 0 0 0', width: '100%' }}\n            />\n          )}\n        </div>\n\n        <div className={styles.tools}>\n          <div className={styles.comment}>\n            <CommentIcon />\n            {tweet.comments.length}\n          </div>\n          <div className={styles.retweet}>\n            <ReTweetIcon />\n            {tweet.retweets.length}\n          </div>\n          <div className={styles.like}>\n            <HeartIcon />\n            {tweet.likes.length}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst timeAgo = (createdAt) => {\n  const timeDifference = Date.now() - new Date(createdAt);\n  const msTypes = [\n    { ms: 3.154e10, symbol: 'y' }, // ms per year (approx)\n    { ms: 2.628e9, symbol: 'mo' }, // ms per month\n    { ms: 6.048e8, symbol: 'w' }, // ms per week\n    { ms: 8.64e7, symbol: 'd' }, // ms per day\n    { ms: 3.6e6, symbol: 'h' }, // ms per hour\n    { ms: 60000, symbol: 'm' }, // ms per minute\n    { ms: 1000, symbol: 's' }, // ms per second\n  ];\n\n  for (let i = 0; i < msTypes.length; i++) {\n    if (timeDifference >= msTypes[i].ms)\n      return `${Math.floor(timeDifference / msTypes[i].ms)}${msTypes[i].symbol}`;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}