{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\novak\\\\Documents\\\\MERN-Twitter-clone-main\\\\client\\\\src\\\\components\\\\Button\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Button({\n  children,\n  design,\n  style,\n  text,\n  onClick,\n  type,\n  disabled\n}) {\n  _s();\n\n  const ref = useRef(null);\n\n  const btnStyles = {\n    width: 'calc(100% - 10px)',\n    height: '42px',\n    margin: '5px',\n    display: 'grid',\n    placeItems: 'center',\n    backgroundColor: 'transparent',\n    border: 'none',\n    borderRadius: '2rem',\n    textAlign: 'center',\n    fontSize: '1em',\n    fontWeight: '600',\n    cursor: 'pointer',\n    transition: 'box-shadow 0.2s',\n    opacity: disabled ? '0.4' : '1'\n  },\n        filled = {\n    backgroundColor: 'var(--twitterBlue)',\n    color: '#fff'\n  },\n        outlined = {\n    border: '1px solid var(--twitterBlue)',\n    color: 'var(--twitterBlue)'\n  },\n        doHoverStyles = () => {\n    ref.current.style.boxShadow = '0 0 5rem 0.4rem rgba(0, 0, 0, 0.2) inset';\n  },\n        undoHoverStyles = () => {\n    ref.current.style.boxShadow = 'none';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    ref: ref,\n    style: { ...btnStyles,\n      ...(design === 'outlined' ? outlined : filled),\n      ...style\n    },\n    onMouseEnter: doHoverStyles,\n    onMouseLeave: undoHoverStyles,\n    type: type ? type : '',\n    onClick: onClick ? onClick : () => null,\n    disabled: disabled,\n    children: children || text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Button, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\n\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["C:/Users/novak/Documents/MERN-Twitter-clone-main/client/src/components/Button/index.js"],"names":["useRef","Button","children","design","style","text","onClick","type","disabled","ref","btnStyles","width","height","margin","display","placeItems","backgroundColor","border","borderRadius","textAlign","fontSize","fontWeight","cursor","transition","opacity","filled","color","outlined","doHoverStyles","current","boxShadow","undoHoverStyles"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;;AAEA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA,KAApB;AAA2BC,EAAAA,IAA3B;AAAiCC,EAAAA,OAAjC;AAA0CC,EAAAA,IAA1C;AAAgDC,EAAAA;AAAhD,CAAhB,EAA4E;AAAA;;AACzF,QAAMC,GAAG,GAAGT,MAAM,CAAC,IAAD,CAAlB;;AAEA,QAAMU,SAAS,GAAG;AACdC,IAAAA,KAAK,EAAE,mBADO;AAEdC,IAAAA,MAAM,EAAE,MAFM;AAGdC,IAAAA,MAAM,EAAE,KAHM;AAIdC,IAAAA,OAAO,EAAE,MAJK;AAKdC,IAAAA,UAAU,EAAE,QALE;AAMdC,IAAAA,eAAe,EAAE,aANH;AAOdC,IAAAA,MAAM,EAAE,MAPM;AAQdC,IAAAA,YAAY,EAAE,MARA;AASdC,IAAAA,SAAS,EAAE,QATG;AAUdC,IAAAA,QAAQ,EAAE,KAVI;AAWdC,IAAAA,UAAU,EAAE,KAXE;AAYdC,IAAAA,MAAM,EAAE,SAZM;AAadC,IAAAA,UAAU,EAAE,iBAbE;AAcdC,IAAAA,OAAO,EAAEhB,QAAQ,GAAG,KAAH,GAAW;AAdd,GAAlB;AAAA,QAgBEiB,MAAM,GAAG;AACPT,IAAAA,eAAe,EAAE,oBADV;AAEPU,IAAAA,KAAK,EAAE;AAFA,GAhBX;AAAA,QAoBEC,QAAQ,GAAG;AACTV,IAAAA,MAAM,EAAE,8BADC;AAETS,IAAAA,KAAK,EAAE;AAFE,GApBb;AAAA,QAwBEE,aAAa,GAAG,MAAM;AACpBnB,IAAAA,GAAG,CAACoB,OAAJ,CAAYzB,KAAZ,CAAkB0B,SAAlB,GAA8B,0CAA9B;AACD,GA1BH;AAAA,QA2BEC,eAAe,GAAG,MAAM;AACtBtB,IAAAA,GAAG,CAACoB,OAAJ,CAAYzB,KAAZ,CAAkB0B,SAAlB,GAA8B,MAA9B;AACD,GA7BH;;AA+BA,sBACE;AACE,IAAA,GAAG,EAAErB,GADP;AAEE,IAAA,KAAK,EAAE,EAAE,GAAGC,SAAL;AAAgB,UAAIP,MAAM,KAAK,UAAX,GAAwBwB,QAAxB,GAAmCF,MAAvC,CAAhB;AAAgE,SAAGrB;AAAnE,KAFT;AAGE,IAAA,YAAY,EAAEwB,aAHhB;AAIE,IAAA,YAAY,EAAEG,eAJhB;AAKE,IAAA,IAAI,EAAExB,IAAI,GAAGA,IAAH,GAAU,EALtB;AAME,IAAA,OAAO,EAAED,OAAO,GAAGA,OAAH,GAAa,MAAM,IANrC;AAOE,IAAA,QAAQ,EAAEE,QAPZ;AAAA,cAQGN,QAAQ,IAAIG;AARf;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA9CuBJ,M;;KAAAA,M","sourcesContent":["import { useRef } from 'react';\n\nexport default function Button({ children, design, style, text, onClick, type, disabled }) {\n  const ref = useRef(null);\n\n  const btnStyles = {\n      width: 'calc(100% - 10px)',\n      height: '42px',\n      margin: '5px',\n      display: 'grid',\n      placeItems: 'center',\n      backgroundColor: 'transparent',\n      border: 'none',\n      borderRadius: '2rem',\n      textAlign: 'center',\n      fontSize: '1em',\n      fontWeight: '600',\n      cursor: 'pointer',\n      transition: 'box-shadow 0.2s',\n      opacity: disabled ? '0.4' : '1',\n    },\n    filled = {\n      backgroundColor: 'var(--twitterBlue)',\n      color: '#fff',\n    },\n    outlined = {\n      border: '1px solid var(--twitterBlue)',\n      color: 'var(--twitterBlue)',\n    },\n    doHoverStyles = () => {\n      ref.current.style.boxShadow = '0 0 5rem 0.4rem rgba(0, 0, 0, 0.2) inset';\n    },\n    undoHoverStyles = () => {\n      ref.current.style.boxShadow = 'none';\n    };\n\n  return (\n    <button\n      ref={ref}\n      style={{ ...btnStyles, ...(design === 'outlined' ? outlined : filled), ...style }}\n      onMouseEnter={doHoverStyles}\n      onMouseLeave={undoHoverStyles}\n      type={type ? type : ''}\n      onClick={onClick ? onClick : () => null}\n      disabled={disabled}>\n      {children || text}\n    </button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}