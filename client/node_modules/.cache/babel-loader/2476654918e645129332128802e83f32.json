{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\novak\\\\Documents\\\\MERN-Twitter-clone-main\\\\client\\\\src\\\\components\\\\PostTweet\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport axios from '../../api';\nimport Button from '../Button';\nimport Loading from '../Loading';\nimport ProfilePicture from '../ProfilePicture';\nimport IconButton from '../IconButton';\nimport ImageIcon from '../../icons/Image';\nimport EmojiIcon from '../../icons/Emoji';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostTweet({\n  addTweet\n}) {\n  _s();\n\n  const {\n    token\n  } = useSelector(state => state.user);\n  const [submitting, setSubmitting] = useState(false);\n  const [tweetText, setTweetText] = useState('');\n  const [pic, setPic] = useState(null);\n  const tweetTextRef = useRef();\n\n  const handleSubmit = async e => {\n    // e.preventDefault();\n    setSubmitting(true);\n    const formData = {\n      message: tweetText,\n      image: (pic === null || pic === void 0 ? void 0 : pic.base64) || null\n    };\n\n    try {\n      const response = await axios.post('/twitter/tweet', formData, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      });\n      console.log(`✅ ${response.status} ${response.statusText}`);\n      console.log(response.data);\n      addTweet(response.data.tweet);\n      setTweetText('');\n      setPic(null);\n    } catch (error) {\n      console.error('❌', error);\n    }\n\n    setSubmitting(false);\n  };\n\n  const handleImage = e => {\n    // get the files\n    const allFiles = e.target.files;\n    const file = allFiles[0]; // Make new FileReader\n\n    const reader = new FileReader(); // Convert the file to base64 text\n\n    reader.readAsDataURL(file); // on reader load somthing...\n\n    reader.onload = () => {\n      // Make a fileInfo Object\n      const fileInfo = {\n        name: file.name,\n        type: file.type,\n        size: Math.round(file.size / 1000) + ' kB',\n        base64: reader.result,\n        file: file\n      }; // Set it to the state\n\n      setPic(fileInfo);\n    };\n  };\n\n  const componentStyles = {\n    display: 'flex',\n    border: '0.5px solid #f5f5f5'\n  },\n        formStyles = {\n    flex: '1',\n    padding: '0 10px 10px 0'\n  },\n        textAreaStyles = {\n    width: '100%',\n    height: 'auto',\n    margin: '15px 0',\n    fontSize: '1.2em',\n    backgroundColor: 'transparent',\n    border: 'none',\n    resize: 'none',\n    overflow: 'hidden',\n    outline: 'none'\n  },\n        toolStyles = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n        svgStyles = {\n    width: '20px',\n    height: '20px',\n    fill: 'var(--twitterBlue)'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: componentStyles,\n    children: [/*#__PURE__*/_jsxDEV(ProfilePicture, {\n      isLoggedUser: true,\n      style: {\n        margin: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      style: formStyles,\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: tweetTextRef,\n        placeholder: \"What's happening?\",\n        rows: \"1\",\n        style: textAreaStyles,\n        value: tweetText,\n        onChange: e => {\n          setTweetText(e.target.value); // The following auto-resizes the textarea to the number of rows typed\n\n          tweetTextRef.current.style.height = 'auto';\n          tweetTextRef.current.style.padding = '0';\n          tweetTextRef.current.style.height = `${tweetTextRef.current.scrollHeight}px`;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), pic && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pic.base64,\n        alt: pic.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: toolStyles,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          style: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleImage,\n            type: \"file\",\n            style: {\n              opacity: '0',\n              width: '100%',\n              height: '100%',\n              position: 'absolute',\n              zIndex: '9'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ImageIcon, {\n            style: svgStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => null,\n          children: /*#__PURE__*/_jsxDEV(EmojiIcon, {\n            style: svgStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), submitting ? /*#__PURE__*/_jsxDEV(Loading, {\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Tweet\",\n          design: \"filled\",\n          onClick: handleSubmit,\n          disabled: !tweetText,\n          style: {\n            width: '70px',\n            margin: '0 0 0 auto',\n            lineHeight: '30px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostTweet, \"WByQ6XOiOCIfsSoqK0rKM3+BYS0=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostTweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostTweet\");","map":{"version":3,"sources":["C:/Users/novak/Documents/MERN-Twitter-clone-main/client/src/components/PostTweet/index.js"],"names":["useRef","useState","axios","Button","Loading","ProfilePicture","IconButton","ImageIcon","EmojiIcon","useSelector","PostTweet","addTweet","token","state","user","submitting","setSubmitting","tweetText","setTweetText","pic","setPic","tweetTextRef","handleSubmit","e","formData","message","image","base64","response","post","headers","Authorization","console","log","status","statusText","data","tweet","error","handleImage","allFiles","target","files","file","reader","FileReader","readAsDataURL","onload","fileInfo","name","type","size","Math","round","result","componentStyles","display","border","formStyles","flex","padding","textAreaStyles","width","height","margin","fontSize","backgroundColor","resize","overflow","outline","toolStyles","alignItems","justifyContent","svgStyles","fill","preventDefault","value","current","style","scrollHeight","position","opacity","zIndex","lineHeight"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\nimport axios from '../../api';\nimport Button from '../Button';\nimport Loading from '../Loading';\nimport ProfilePicture from '../ProfilePicture';\nimport IconButton from '../IconButton';\nimport ImageIcon from '../../icons/Image';\nimport EmojiIcon from '../../icons/Emoji';\nimport { useSelector } from 'react-redux';\n\nexport default function PostTweet({ addTweet }) {\n  const { token } = useSelector((state) => state.user);\n  const [submitting, setSubmitting] = useState(false);\n  const [tweetText, setTweetText] = useState('');\n  const [pic, setPic] = useState(null);\n  const tweetTextRef = useRef();\n\n  const handleSubmit = async (e) => {\n    // e.preventDefault();\n    setSubmitting(true);\n    const formData = {\n      message: tweetText,\n      image: pic?.base64 || null,\n    };\n\n    try {\n      const response = await axios.post('/twitter/tweet', formData, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token,\n        },\n      });\n      console.log(`✅ ${response.status} ${response.statusText}`);\n      console.log(response.data);\n      addTweet(response.data.tweet);\n      setTweetText('');\n      setPic(null);\n    } catch (error) {\n      console.error('❌', error);\n    }\n    setSubmitting(false);\n  };\n\n  const handleImage = (e) => {\n    // get the files\n    const allFiles = e.target.files;\n    const file = allFiles[0];\n\n    // Make new FileReader\n    const reader = new FileReader();\n\n    // Convert the file to base64 text\n    reader.readAsDataURL(file);\n\n    // on reader load somthing...\n    reader.onload = () => {\n      // Make a fileInfo Object\n      const fileInfo = {\n        name: file.name,\n        type: file.type,\n        size: Math.round(file.size / 1000) + ' kB',\n        base64: reader.result,\n        file: file,\n      };\n\n      // Set it to the state\n      setPic(fileInfo);\n    };\n  };\n\n  const componentStyles = {\n      display: 'flex',\n      border: '0.5px solid #f5f5f5',\n    },\n    formStyles = {\n      flex: '1',\n      padding: '0 10px 10px 0',\n    },\n    textAreaStyles = {\n      width: '100%',\n      height: 'auto',\n      margin: '15px 0',\n      fontSize: '1.2em',\n      backgroundColor: 'transparent',\n      border: 'none',\n      resize: 'none',\n      overflow: 'hidden',\n      outline: 'none',\n    },\n    toolStyles = {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n    },\n    svgStyles = {\n      width: '20px',\n      height: '20px',\n      fill: 'var(--twitterBlue)',\n    };\n\n  return (\n    <div style={componentStyles}>\n      <ProfilePicture isLoggedUser={true} style={{ margin: '10px' }} />\n\n      <form style={formStyles} onSubmit={(e) => e.preventDefault()}>\n        {/* char limit 280 */}\n        <textarea\n          ref={tweetTextRef}\n          placeholder=\"What's happening?\"\n          rows='1'\n          style={textAreaStyles}\n          value={tweetText}\n          onChange={(e) => {\n            setTweetText(e.target.value);\n            // The following auto-resizes the textarea to the number of rows typed\n            tweetTextRef.current.style.height = 'auto';\n            tweetTextRef.current.style.padding = '0';\n            tweetTextRef.current.style.height = `${tweetTextRef.current.scrollHeight}px`;\n          }}\n        />\n\n        {pic && <img src={pic.base64} alt={pic.name} />}\n\n        <div style={toolStyles}>\n          <IconButton style={{ position: 'relative' }}>\n            <input\n              onChange={handleImage}\n              type='file'\n              style={{\n                opacity: '0',\n                width: '100%',\n                height: '100%',\n                position: 'absolute',\n                zIndex: '9',\n              }}\n            />\n            <ImageIcon style={svgStyles} />\n          </IconButton>\n          <IconButton onClick={() => null}>\n            <EmojiIcon style={svgStyles} />\n          </IconButton>\n\n          {submitting ? (\n            <Loading size={30} />\n          ) : (\n            <Button\n              text='Tweet'\n              design='filled'\n              onClick={handleSubmit}\n              disabled={!tweetText}\n              style={{\n                width: '70px',\n                margin: '0 0 0 auto',\n                lineHeight: '30px',\n              }}\n            />\n          )}\n        </div>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}