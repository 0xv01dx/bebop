{"ast":null,"code":"const initialState = {\n  isLoggedIn: false,\n  token: localStorage.getItem('token') || null,\n  id: null,\n  name: null,\n  username: null,\n  profilePicture: null,\n  following: [],\n  followers: []\n};\nexport const userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      action.token && localStorage.setItem('token', action.token);\n      return {\n        isLoggedIn: true,\n        token: action.token,\n        ...action.payload\n      };\n\n    case 'LOGOUT':\n      localStorage.removeItem('token');\n      return { ...initialState,\n        token: null\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/novak/Documents/MERN-Twitter-clone-main/client/src/reducers/userReducer.js"],"names":["initialState","isLoggedIn","token","localStorage","getItem","id","name","username","profilePicture","following","followers","userReducer","state","action","type","setItem","payload","removeItem"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IAFrB;AAGnBC,EAAAA,EAAE,EAAE,IAHe;AAInBC,EAAAA,IAAI,EAAE,IAJa;AAKnBC,EAAAA,QAAQ,EAAE,IALS;AAMnBC,EAAAA,cAAc,EAAE,IANG;AAOnBC,EAAAA,SAAS,EAAE,EAPQ;AAQnBC,EAAAA,SAAS,EAAE;AARQ,CAArB;AAWA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAkC;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACED,MAAAA,MAAM,CAACX,KAAP,IAAgBC,YAAY,CAACY,OAAb,CAAqB,OAArB,EAA8BF,MAAM,CAACX,KAArC,CAAhB;AACA,aAAO;AAAED,QAAAA,UAAU,EAAE,IAAd;AAAoBC,QAAAA,KAAK,EAAEW,MAAM,CAACX,KAAlC;AAAyC,WAAGW,MAAM,CAACG;AAAnD,OAAP;;AAEF,SAAK,QAAL;AACEb,MAAAA,YAAY,CAACc,UAAb,CAAwB,OAAxB;AACA,aAAO,EAAE,GAAGjB,YAAL;AAAmBE,QAAAA,KAAK,EAAE;AAA1B,OAAP;;AAEF;AACE,aAAOU,KAAP;AAVJ;AAYD,CAbM","sourcesContent":["const initialState = {\n  isLoggedIn: false,\n  token: localStorage.getItem('token') || null,\n  id: null,\n  name: null,\n  username: null,\n  profilePicture: null,\n  following: [],\n  followers: [],\n};\n\nexport const userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      action.token && localStorage.setItem('token', action.token);\n      return { isLoggedIn: true, token: action.token, ...action.payload };\n\n    case 'LOGOUT':\n      localStorage.removeItem('token');\n      return { ...initialState, token: null };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}