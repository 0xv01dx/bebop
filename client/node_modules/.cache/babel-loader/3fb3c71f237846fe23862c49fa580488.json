{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\novak\\\\Documents\\\\MERN-Twitter-clone-main\\\\client\\\\src\\\\components\\\\Profile\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport styles from './index.module.css';\nimport ProfilePicture from '../ProfilePicture';\nimport axios from '../../api';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile({\n  tweet\n}) {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    token\n  } = useSelector(state => state.user);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await axios.get(`/twitter/profile/${id}`, {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + token\n          }\n        });\n        console.log(`✅ ${response.status} ${response.statusText}`);\n        setUsers(response.data.user);\n      } catch (error) {\n        console.error('❌', error);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.box,\n    children: [/*#__PURE__*/_jsxDEV(ProfilePicture, {\n      image: users.profilePicture\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), console.log(users.tweets)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"YjABqrzWOUApAG6hYoIMCIhwKvs=\", false, function () {\n  return [useParams, useSelector];\n});\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/novak/Documents/MERN-Twitter-clone-main/client/src/components/Profile/index.js"],"names":["useEffect","useState","useSelector","styles","ProfilePicture","axios","useParams","Profile","tweet","id","token","state","user","users","setUsers","response","get","headers","Authorization","console","log","status","statusText","data","error","box","profilePicture","tweets"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA4B;AAAA;;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAASH,SAAS,EAAxB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAYR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA7B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACT,UAAK;AACN,cAAMe,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,oBAAmBP,EAAG,EAAjC,EAAqC;AACzDQ,UAAAA,OAAO,EAAE;AACP,4BAAgB,kBADT;AAEPC,YAAAA,aAAa,EAAE,YAAYR;AAFpB;AADgD,SAArC,CAAvB;AAMCS,QAAAA,OAAO,CAACC,GAAR,CAAa,KAAIL,QAAQ,CAACM,MAAO,IAAGN,QAAQ,CAACO,UAAW,EAAxD;AACAR,QAAAA,QAAQ,CAACC,QAAQ,CAACQ,IAAT,CAAcX,IAAf,CAAR;AACD,OATC,CASA,OAAOY,KAAP,EAAc;AACdL,QAAAA,OAAO,CAACK,KAAR,CAAc,GAAd,EAAmBA,KAAnB;AACD;AAEF,KAdD;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBE,sBACI;AAAK,IAAA,SAAS,EAAErB,MAAM,CAACsB,GAAvB;AAAA,4BACF,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAEZ,KAAK,CAACa;AAA7B;AAAA;AAAA;AAAA;AAAA,YADE,EAEEP,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACc,MAAlB,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA9BuBpB,O;UACPD,S,EACGJ,W;;;KAFIK,O","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styles from './index.module.css';\r\nimport ProfilePicture from '../ProfilePicture';\r\nimport axios from '../../api';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport default function Profile({ tweet }) {\r\n  const { id } = useParams();\r\n  const { token } = useSelector((state) => state.user);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n        try  {\r\n       const response = await axios.get(`/twitter/profile/${id}`,  {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer ' + token,\r\n          },\r\n        });\r\n        console.log(`✅ ${response.status} ${response.statusText}`);\r\n        setUsers(response.data.user);\r\n      } catch (error) {\r\n        console.error('❌', error);\r\n      }\r\n          \r\n    })();\r\n  }, []);\r\n\r\n    return (\r\n        <div className={styles.box}>\r\n      <ProfilePicture image={users.profilePicture} />\r\n        { console.log(users.tweets)}\r\n        </div>\r\n        \r\n      );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}