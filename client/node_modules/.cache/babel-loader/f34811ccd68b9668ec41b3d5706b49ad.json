{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport default function useMediaQuery(query) {\n  _s();\n\n  const [matchQuery, setMatchQuery] = useState(false);\n  useEffect(() => {\n    const media = window.matchMedia(query); // Example of \"media\" Object if the query was \"(max-width: 768px)\":\n    // {\n    //   listeners: {change: Array},\n    //   matches: true/false,\n    //   media: \"(max-width: 768px)\",\n    //   onchange: null\n    // }\n    // update state when condition changes\n\n    if (media.matches !== matchQuery) setMatchQuery(media.matches); // handle listener for MediaQueryList\n\n    const listener = () => setMatchQuery(media.matches);\n\n    media.addListener(listener);\n    return () => media.removeListener(listener);\n  }, [matchQuery, query]); // either true or false\n\n  return matchQuery;\n}\n\n_s(useMediaQuery, \"3bWgj2gEz2mWa/+5FciEENKxGgA=\");","map":{"version":3,"sources":["C:/Users/novak/Documents/MERN-Twitter-clone-main/client/src/hooks/useMediaQuery.js"],"names":["useState","useEffect","useMediaQuery","query","matchQuery","setMatchQuery","media","window","matchMedia","matches","listener","addListener","removeListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC3C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,KAAK,GAAGC,MAAM,CAACC,UAAP,CAAkBL,KAAlB,CAAd,CADc,CAEd;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,QAAIG,KAAK,CAACG,OAAN,KAAkBL,UAAtB,EAAkCC,aAAa,CAACC,KAAK,CAACG,OAAP,CAAb,CAXpB,CAad;;AACA,UAAMC,QAAQ,GAAG,MAAML,aAAa,CAACC,KAAK,CAACG,OAAP,CAApC;;AACAH,IAAAA,KAAK,CAACK,WAAN,CAAkBD,QAAlB;AACA,WAAO,MAAMJ,KAAK,CAACM,cAAN,CAAqBF,QAArB,CAAb;AACD,GAjBQ,EAiBN,CAACN,UAAD,EAAaD,KAAb,CAjBM,CAAT,CAH2C,CAsB3C;;AACA,SAAOC,UAAP;AACD;;GAxBuBF,a","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport default function useMediaQuery(query) {\n  const [matchQuery, setMatchQuery] = useState(false);\n\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    // Example of \"media\" Object if the query was \"(max-width: 768px)\":\n    // {\n    //   listeners: {change: Array},\n    //   matches: true/false,\n    //   media: \"(max-width: 768px)\",\n    //   onchange: null\n    // }\n\n    // update state when condition changes\n    if (media.matches !== matchQuery) setMatchQuery(media.matches);\n\n    // handle listener for MediaQueryList\n    const listener = () => setMatchQuery(media.matches);\n    media.addListener(listener);\n    return () => media.removeListener(listener);\n  }, [matchQuery, query]);\n\n  // either true or false\n  return matchQuery;\n}\n"]},"metadata":{},"sourceType":"module"}