{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\novak\\\\Documents\\\\MERN-Twitter-clone-main\\\\client\\\\src\\\\components\\\\Profile\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from '../../api';\nimport Loading from '../Loading';\nimport PostTweet from '../PostTweet';\nimport Tweet from '../Tweet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile({\n  User\n}) {\n  _s();\n\n  const {\n    token\n  } = useSelector(state => state.user);\n  const [fetching, setFetching] = useState(false);\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    (async () => {\n      setFetching(true);\n\n      try {\n        const response = await axios.get(`/profile/${User}`, {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + token\n          }\n        });\n        console.log(`‚úÖ ${response.status} ${response.statusText}`);\n        setTweets(response.data.tweets);\n        setFetching(false);\n      } catch (error) {\n        console.error('‚ùå', error);\n        setFetching(false);\n      }\n    })(); // eslint-disable-next-line\n\n  }, []);\n  const componentStyles = {\n    flex: '1',\n    border: '0.5px solid #f5f5f5'\n  },\n        titleStyles = {\n    padding: '0.7em',\n    fontSize: '1.2em',\n    fontWeight: '900'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: componentStyles,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: titleStyles,\n      children: selectedNav\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), selectedNav === 'Home' ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PostTweet, {\n        addTweet: tweet => setTweets([tweet, ...tweets])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 'calc(100vh - 160px)'\n        },\n        className: \"scroll\",\n        children: fetching ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this) : tweets.map(item => /*#__PURE__*/_jsxDEV(Tweet, {\n          tweet: item\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 60\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        paddingTop: '50px'\n      },\n      children: [\"LOL nice try! \\uD83D\\uDE02\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), \"Just head over to\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://twitter.com\",\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        children: \"https://twitter.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Profile, \"nQdWT4uMJgdzopL+Xv/czvsBcyM=\", false, function () {\n  return [useSelector];\n});\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/novak/Documents/MERN-Twitter-clone-main/client/src/components/Profile/index.js"],"names":["Fragment","useEffect","useState","useSelector","axios","Loading","PostTweet","Tweet","Profile","User","token","state","user","fetching","setFetching","tweets","setTweets","response","get","headers","Authorization","console","log","status","statusText","data","error","componentStyles","flex","border","titleStyles","padding","fontSize","fontWeight","selectedNav","tweet","height","map","item","_id","textAlign","paddingTop"],"mappings":"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","sourcesContent":["import { Fragment, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from '../../api';\r\nimport Loading from '../Loading';\r\nimport PostTweet from '../PostTweet';\r\nimport Tweet from '../Tweet';\r\n\r\nexport default function Profile({ User }) {\r\n  const { token } = useSelector((state) => state.user);\r\n  const [fetching, setFetching] = useState(false);\r\n  const [tweets, setTweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setFetching(true);\r\n      try {\r\n        const response = await axios.get(`/profile/${User}`,  {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer ' + token,\r\n          },\r\n        });\r\n        console.log(`‚úÖ ${response.status} ${response.statusText}`);\r\n        setTweets(response.data.tweets);\r\n        setFetching(false);\r\n      } catch (error) {\r\n        console.error('‚ùå', error);\r\n        setFetching(false);\r\n      }\r\n    })();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const componentStyles = {\r\n      flex: '1',\r\n      border: '0.5px solid #f5f5f5',\r\n    },\r\n    titleStyles = {\r\n      padding: '0.7em',\r\n      fontSize: '1.2em',\r\n      fontWeight: '900',\r\n    };\r\n\r\n  return (\r\n    <div style={componentStyles}>\r\n      <div style={titleStyles}>{selectedNav}</div>\r\n\r\n      {selectedNav === 'Home' ? (\r\n        <Fragment>\r\n          {/* post tweet */}\r\n          <PostTweet addTweet={(tweet) => setTweets([tweet, ...tweets])} />\r\n\r\n          {/* tweets feed */}\r\n          <div style={{ height: 'calc(100vh - 160px)' }} className='scroll'>\r\n            {fetching ? <Loading /> : tweets.map((item) => <Tweet key={item._id} tweet={item} />)}\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <div style={{ textAlign: 'center', paddingTop: '50px' }}>\r\n          LOL nice try! üòÇ\r\n          <br />\r\n          Just head over to{' '}\r\n          <a href='https://twitter.com' target='_blank' rel='noreferrer'>\r\n            https://twitter.com\r\n          </a>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}