{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\novak\\\\Documents\\\\MERN-Twitter-clone-main\\\\client\\\\src\\\\components\\\\RegisterForm\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../actions/userActions';\nimport axios from '../../api';\nimport Loading from '../Loading';\nimport Button from '../Button';\nimport Input from '../Input';\nimport PicSelector from '../PicSelector';\nimport TwitterIcon from '../../icons/Twitter';\nimport BackIcon from '../../icons/Back';\nimport WhoToFollow from '../WhoToFollow';\nimport IconButton from '../IconButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterForm({\n  closeModal\n}) {\n  _s();\n\n  const [phase, setPhase] = useState(1);\n  const [submitting, setSubmitting] = useState(false);\n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [profilePic, setProfilePic] = useState('');\n  const dispatch = useDispatch();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (phase === 3) {\n      setSubmitting(true);\n      const formData = {\n        name,\n        username,\n        email,\n        password,\n        imageBase64: profilePic.base64\n      };\n\n      try {\n        const response = await axios.post('/auth/register', formData);\n        console.log(`✅ ${response.status} ${response.statusText}`);\n        dispatch(login({\n          user: response.data.user,\n          token: response.data.token\n        }));\n        setSubmitting(false);\n        setPhase(4);\n        alert('account registered successfully');\n      } catch (error) {\n        console.error('❌', error);\n        setSubmitting(false);\n\n        if (error.response.status === 400) {\n          alert(error.response.data.message);\n        } else {\n          alert('an unnexpected error occurred');\n        }\n      }\n    }\n  };\n\n  const navStyles = {\n    height: '50px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    position: 'relative'\n  },\n        svgStyles = {\n    width: '25px',\n    height: '25px',\n    fill: 'var(--twitterBlue)'\n  },\n        navBtnStyles = {\n    width: '60px',\n    lineHeight: '25px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    cursor: 'pointer'\n  },\n        skipStyles = {\n    whiteSpace: 'nowrap',\n    justifyContent: 'flex-end',\n    backgroundColor: 'transparent',\n    border: 'none',\n    color: 'var(--twitterBlue)',\n    fontSize: '1em',\n    fontWeight: '600'\n  },\n        titleStyles = {\n    margin: '10px 0 20px 0',\n    fontSize: '1.5em',\n    fontWeight: '100 !important'\n  };\n\n  const None = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '70px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 22\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: navStyles,\n      children: [phase !== 1 && phase !== 4 ? /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(BackIcon, {\n          style: svgStyles,\n          onClick: () => setPhase(phase - 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(None, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TwitterIcon, {\n        style: { ...svgStyles,\n          position: 'absolute',\n          left: 'calc(50% - 15px)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), phase === 2 && !profilePic ? /*#__PURE__*/_jsxDEV(\"button\", {\n        style: { ...navBtnStyles,\n          ...skipStyles\n        },\n        onClick: () => setPhase(phase + 1),\n        children: \"Skip for now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this) : phase === 3 ? /*#__PURE__*/_jsxDEV(None, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this) : phase === 4 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        style: { ...navBtnStyles,\n          ...skipStyles\n        },\n        onClick: closeModal,\n        children: \"Skip for now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        style: navBtnStyles,\n        text: \"Next\",\n        design: \"filled\",\n        onClick: () => setPhase(phase + 1),\n        disabled: phase === 1 && (name === '' || email === '' || password === '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: titleStyles,\n      children: phase === 1 ? 'Create your account' : phase === 2 ? 'Pick a profile picture' : phase === 3 ? 'Verify your account details' : phase === 4 ? 'Who to follow' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), phase === 2 || phase === 3 ?\n    /*#__PURE__*/\n    // react-file-base64\n    _jsxDEV(PicSelector, {\n      pic: profilePic,\n      setPic: setProfilePic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this) : null, phase === 1 || phase === 3 ? /*#__PURE__*/_jsxDEV(Input, {\n      label: \"Name\",\n      name: \"name\",\n      type: \"text\",\n      value: name,\n      onChange: e => {\n        setName(e.target.value);\n        setUsername(e.target.value.replaceAll(' ', ''));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this) : null, phase === 3 && /*#__PURE__*/_jsxDEV(Input, {\n      label: \"Username\",\n      name: \"username\",\n      type: \"text\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this), phase === 1 || phase === 3 ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Email\",\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Password\",\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this) : null, phase === 3 && submitting ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this) : phase === 3 && !submitting ? /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Sign up\",\n      design: \"filled\",\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this) : null, phase === 4 && /*#__PURE__*/_jsxDEV(WhoToFollow, {\n      height: \"470\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterForm, \"g15DwrST1KC+gBi0kCSKP3DTJZc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/novak/Documents/MERN-Twitter-clone-main/client/src/components/RegisterForm/index.js"],"names":["Fragment","useState","useDispatch","login","axios","Loading","Button","Input","PicSelector","TwitterIcon","BackIcon","WhoToFollow","IconButton","RegisterForm","closeModal","phase","setPhase","submitting","setSubmitting","name","setName","username","setUsername","email","setEmail","password","setPassword","profilePic","setProfilePic","dispatch","handleSubmit","e","preventDefault","formData","imageBase64","base64","response","post","console","log","status","statusText","user","data","token","alert","error","message","navStyles","height","display","alignItems","justifyContent","position","svgStyles","width","fill","navBtnStyles","lineHeight","cursor","skipStyles","whiteSpace","backgroundColor","border","color","fontSize","fontWeight","titleStyles","margin","None","left","target","value","replaceAll"],"mappings":"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","sourcesContent":["import { Fragment, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../actions/userActions';\nimport axios from '../../api';\nimport Loading from '../Loading';\nimport Button from '../Button';\nimport Input from '../Input';\nimport PicSelector from '../PicSelector';\nimport TwitterIcon from '../../icons/Twitter';\nimport BackIcon from '../../icons/Back';\nimport WhoToFollow from '../WhoToFollow';\nimport IconButton from '../IconButton';\n\nexport default function RegisterForm({ closeModal }) {\n  const [phase, setPhase] = useState(1);\n  const [submitting, setSubmitting] = useState(false);\n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [profilePic, setProfilePic] = useState('');\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (phase === 3) {\n      setSubmitting(true);\n      const formData = {\n        name,\n        username,\n        email,\n        password,\n        imageBase64: profilePic.base64,\n      };\n\n      try {\n        const response = await axios.post('/auth/register', formData);\n        console.log(`✅ ${response.status} ${response.statusText}`);\n        dispatch(login({ user: response.data.user, token: response.data.token }));\n        setSubmitting(false);\n        setPhase(4);\n        alert('account registered successfully');\n      } catch (error) {\n        console.error('❌', error);\n        setSubmitting(false);\n        if (error.response.status === 400) {\n          alert(error.response.data.message);\n        } else {\n          alert('an unnexpected error occurred');\n        }\n      }\n    }\n  };\n\n  const navStyles = {\n      height: '50px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      position: 'relative',\n    },\n    svgStyles = {\n      width: '25px',\n      height: '25px',\n      fill: 'var(--twitterBlue)',\n    },\n    navBtnStyles = {\n      width: '60px',\n      lineHeight: '25px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      cursor: 'pointer',\n    },\n    skipStyles = {\n      whiteSpace: 'nowrap',\n      justifyContent: 'flex-end',\n      backgroundColor: 'transparent',\n      border: 'none',\n      color: 'var(--twitterBlue)',\n      fontSize: '1em',\n      fontWeight: '600',\n    },\n    titleStyles = {\n      margin: '10px 0 20px 0',\n      fontSize: '1.5em',\n      fontWeight: '100 !important',\n    };\n\n  const None = () => <div style={{ width: '70px' }} />;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {/* form nav (phase controller) */}\n      <div style={navStyles}>\n        {phase !== 1 && phase !== 4 ? (\n          <IconButton>\n            <BackIcon style={svgStyles} onClick={() => setPhase(phase - 1)} />\n          </IconButton>\n        ) : (\n          <None />\n        )}\n\n        <TwitterIcon style={{ ...svgStyles, position: 'absolute', left: 'calc(50% - 15px)' }} />\n\n        {phase === 2 && !profilePic ? (\n          <button style={{ ...navBtnStyles, ...skipStyles }} onClick={() => setPhase(phase + 1)}>\n            Skip for now\n          </button>\n        ) : phase === 3 ? (\n          <None />\n        ) : phase === 4 ? (\n          <button style={{ ...navBtnStyles, ...skipStyles }} onClick={closeModal}>\n            Skip for now\n          </button>\n        ) : (\n          <Button\n            style={navBtnStyles}\n            text='Next'\n            design='filled'\n            onClick={() => setPhase(phase + 1)}\n            disabled={phase === 1 && (name === '' || email === '' || password === '')}\n          />\n        )}\n      </div>\n\n      {/* phase title */}\n      <h2 style={titleStyles}>\n        {phase === 1\n          ? 'Create your account'\n          : phase === 2\n          ? 'Pick a profile picture'\n          : phase === 3\n          ? 'Verify your account details'\n          : phase === 4\n          ? 'Who to follow'\n          : ''}\n      </h2>\n\n      {phase === 2 || phase === 3 ? (\n        // react-file-base64\n        <PicSelector pic={profilePic} setPic={setProfilePic} />\n      ) : null}\n\n      {/* phase inputs */}\n      {phase === 1 || phase === 3 ? (\n        <Input\n          label='Name'\n          name='name'\n          type='text'\n          value={name}\n          onChange={(e) => {\n            setName(e.target.value);\n            setUsername(e.target.value.replaceAll(' ', ''));\n          }}\n        />\n      ) : null}\n      {phase === 3 && (\n        <Input\n          label='Username'\n          name='username'\n          type='text'\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      )}\n      {phase === 1 || phase === 3 ? (\n        <Fragment>\n          <Input\n            label='Email'\n            name='email'\n            type='email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <Input\n            label='Password'\n            name='password'\n            type='password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Fragment>\n      ) : null}\n\n      {/* submit */}\n      {phase === 3 && submitting ? (\n        <Loading />\n      ) : phase === 3 && !submitting ? (\n        <Button text='Sign up' design='filled' type='submit' />\n      ) : null}\n\n      {/* list of people on twitter */}\n      {phase === 4 && <WhoToFollow height='470' />}\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}